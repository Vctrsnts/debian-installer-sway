name: Release autom√°tica

on:
  push:
    branches:
      - master
  workflow_dispatch:   # üëà Esto habilita la ejecuci√≥n manual

concurrency:
  group: release-master
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Esperar 5 minutos para agrupar cambios
        run: sleep 300

      - name: Checkout del repositorio
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Obtener √∫ltimo tag
        id: lasttag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "last_tag=$LAST_TAG" >> $GITHUB_ENV

      - name: Comprobar si hay commits nuevos desde la √∫ltima release
        id: check
        run: |
          if [ -n "$LAST_TAG" ]; then
            COUNT=$(git rev-list ${LAST_TAG}..HEAD --count)
          else
            COUNT=$(git rev-list HEAD --count)
          fi
          echo "commit_count=$COUNT" >> $GITHUB_ENV
          if [ "$COUNT" -eq 0 ]; then
            echo "No hay commits nuevos desde la √∫ltima release. Cancelando."
            exit 0
          fi

      - name: Crear tag con formato YYMMDDHHMM
        run: |
          TAG="v$(date +'%y%m%d%H%M')"
          echo "TAG=$TAG" >> $GITHUB_ENV
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag $TAG
          git push origin $TAG

      - name: Crear release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          body: "Release generada autom√°ticamente"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
